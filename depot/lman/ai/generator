#!/bin/bash

set -e -u

AI_DIR="$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)"
DEPOT_DIR="${AI_DIR%/depot/*}/depot"

cd "${AI_DIR}"

if [ -f BUILD.cmake ]; then rm BUILD.cmake; fi

for cpp_file in *.cpp; do
  name="${cpp_file%.cpp}"
  identifier=$(echo -n "${name}" | sed -e 's/[^a-zA-Z0-9]/_/g')
  upper_identifier="$(echo -n "${identifier}" | tr '[a-z]' '[A-Z]')"

  cat << EOM >"${name}.cc"
#include "lman/ai/${name}.h"

namespace lman {
namespace ${identifier} {
#include "lman/ai/${name}.cpp"
}  // namespace ${identifier}
}  // namespace lman

EOM


  cat << EOM >"${name}.h"
#ifndef LMAN_AI_${upper_identifier}_H_
#define LMAN_AI_${upper_identifier}_H_

#include "translator/lib.h"
#include "sbl/tree.cpp"

namespace lman {
namespace ${identifier} {

P init(P game, P nazo);
P step(P ai, P game);

}  // namespace ${identifier}

class ${identifier}LambdaMan {
 public:
  P BInit(P game, P nazo) {
    return ${identifier}::init(game, nazo);
  }

  P BStep(P ai, P game) {
    return ${identifier}::step(ai, game);
  }
};

}  // namespace lman

#endif  // LMAN_AI_${upper_identifier}_H_

EOM


  cat << EOM >BUILD.cmake
cc_library(
    NAME "${name}"
    SOURCES "${name}.cc"
    DEPENDENCIES
        "//base"
        "//translator:lib"
)

EOM

done
