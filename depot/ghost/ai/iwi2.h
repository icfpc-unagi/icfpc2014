#ifndef GHOST_AI_IWI2_H_
#define GHOST_AI_IWI2_H_

#include "ghost/ghost.h"

#include <glog/logging.h>

namespace ghost {

class iwi2Ghost : public Ghost {
  void Run() override {
    ResetTick();
pc000: if (Tick()) return;
    register_pc_ = 0;
    VLOG(3) << "[0] INT 1";
    INT1();
pc001: if (Tick()) return;
    register_pc_ = 1;
    VLOG(3) << "[1] MOV e,a";
    MOV(register_e_, register_a_);
pc002: if (Tick()) return;
    register_pc_ = 2;
    VLOG(3) << "[2] MOV f,b";
    MOV(register_f_, register_b_);
pc003: if (Tick()) return;
    register_pc_ = 3;
    VLOG(3) << "[3] INT 3";
    INT3();
pc004: if (Tick()) return;
    register_pc_ = 4;
    VLOG(3) << "[4] MOV [0],a";
    MOV(Memory(0), register_a_);
pc005: if (Tick()) return;
    register_pc_ = 5;
    VLOG(3) << "[5] INT 5";
    INT5();
pc006: if (Tick()) return;
    register_pc_ = 6;
    VLOG(3) << "[6] MOV g,a";
    MOV(register_g_, register_a_);
pc007: if (Tick()) return;
    register_pc_ = 7;
    VLOG(3) << "[7] MOV h,b";
    MOV(register_h_, register_b_);
pc008: if (Tick()) return;
    register_pc_ = 8;
    VLOG(3) << "[8] INT 3";
    INT3();
pc009: if (Tick()) return;
    register_pc_ = 9;
    VLOG(3) << "[9] INT 6";
    INT6();
pc010: if (Tick()) return;
    register_pc_ = 10;
    VLOG(3) << "[10] MOV [3],b";
    MOV(Memory(3), register_b_);
pc011: if (Tick()) return;
    register_pc_ = 11;
    VLOG(3) << "[11] ADD [3],2";
    ADD(Memory(3), 2);
pc012: if (Tick()) return;
    register_pc_ = 12;
    VLOG(3) << "[12] JLT 16,[3],4";
    if (JLT(Memory(3), 4)) goto pc016;
pc013: if (Tick()) return;
    register_pc_ = 13;
    VLOG(3) << "[13] SUB [3],4";
    SUB(Memory(3), 4);
pc014: if (Tick()) return;
    register_pc_ = 14;
    VLOG(3) << "[14] INT 3";
    INT3();
pc015: if (Tick()) return;
    register_pc_ = 15;
    VLOG(3) << "[15] MOV [6],a";
    MOV(Memory(6), register_a_);
pc016: if (Tick()) return;
    register_pc_ = 16;
    VLOG(3) << "[16] MOV [1],[3]";
    MOV(Memory(1), Memory(3));
pc017: if (Tick()) return;
    register_pc_ = 17;
    VLOG(3) << "[17] MOV [4],0";
    MOV(Memory(4), 0);
pc018: if (Tick()) return;
    register_pc_ = 18;
    VLOG(3) << "[18] MOV [5],0";
    MOV(Memory(5), 0);
pc019: if (Tick()) return;
    register_pc_ = 19;
    VLOG(3) << "[19] MOV [99],100";
    MOV(Memory(99), 100);
pc020: if (Tick()) return;
    register_pc_ = 20;
    VLOG(3) << "[20] MOV a,g";
    MOV(register_a_, register_g_);
pc021: if (Tick()) return;
    register_pc_ = 21;
    VLOG(3) << "[21] MOV b,h";
    MOV(register_b_, register_h_);
pc022: if (Tick()) return;
    register_pc_ = 22;
    VLOG(3) << "[22] SUB b,1";
    SUB(register_b_, 1);
pc023: if (Tick()) return;
    register_pc_ = 23;
    VLOG(3) << "[23] MOV [101],a";
    MOV(Memory(101), register_a_);
pc024: if (Tick()) return;
    register_pc_ = 24;
    VLOG(3) << "[24] MOV [102],b";
    MOV(Memory(102), register_b_);
pc025: if (Tick()) return;
    register_pc_ = 25;
    VLOG(3) << "[25] INT 7";
    INT7();
pc026: if (Tick()) return;
    register_pc_ = 26;
    VLOG(3) << "[26] JEQ 63,a,0";
    if (JEQ(register_a_, 0)) goto pc063;
pc027: if (Tick()) return;
    register_pc_ = 27;
    VLOG(3) << "[27] JEQ 63,[3],0";
    if (JEQ(Memory(3), 0)) goto pc063;
pc028: if (Tick()) return;
    register_pc_ = 28;
    VLOG(3) << "[28] MOV [100],0";
    MOV(Memory(100), 0);
pc029: if (Tick()) return;
    register_pc_ = 29;
    VLOG(3) << "[29] JGT 33,f,h";
    if (JGT(register_f_, register_h_)) goto pc033;
pc030: if (Tick()) return;
    register_pc_ = 30;
    VLOG(3) << "[30] ADD [99],100";
    ADD(Memory(99), 100);
pc031: if (Tick()) return;
    register_pc_ = 31;
    VLOG(3) << "[31] MOV [100],h";
    MOV(Memory(100), register_h_);
pc032: if (Tick()) return;
    register_pc_ = 32;
    VLOG(3) << "[32] SUB [100],f";
    SUB(Memory(100), register_f_);
pc033: if (Tick()) return;
    register_pc_ = 33;
    VLOG(3) << "[33] MOV c,[6]";
    MOV(register_c_, Memory(6));
pc034: if (Tick()) return;
    register_pc_ = 34;
    VLOG(3) << "[34] JLT 57,c,1";
    if (JLT(register_c_, 1)) goto pc057;
pc035: if (Tick()) return;
    register_pc_ = 35;
    VLOG(3) << "[35] DEC c";
    DEC(register_c_);
pc036: if (Tick()) return;
    register_pc_ = 36;
    VLOG(3) << "[36] MOV a,c";
    MOV(register_a_, register_c_);
pc037: if (Tick()) return;
    register_pc_ = 37;
    VLOG(3) << "[37] INT 4";
    INT4();
pc038: if (Tick()) return;
    register_pc_ = 38;
    VLOG(3) << "[38] MOV [104],[101]";
    MOV(Memory(104), Memory(101));
pc039: if (Tick()) return;
    register_pc_ = 39;
    VLOG(3) << "[39] SUB [104],a";
    SUB(Memory(104), register_a_);
pc040: if (Tick()) return;
    register_pc_ = 40;
    VLOG(3) << "[40] JGT 43,[101],a";
    if (JGT(Memory(101), register_a_)) goto pc043;
pc041: if (Tick()) return;
    register_pc_ = 41;
    VLOG(3) << "[41] MOV [104],a";
    MOV(Memory(104), register_a_);
pc042: if (Tick()) return;
    register_pc_ = 42;
    VLOG(3) << "[42] SUB [104],[101]";
    SUB(Memory(104), Memory(101));
pc043: if (Tick()) return;
    register_pc_ = 43;
    VLOG(3) << "[43] JGT 56,[104],100";
    if (JGT(Memory(104), 100)) goto pc056;
pc044: if (Tick()) return;
    register_pc_ = 44;
    VLOG(3) << "[44] MOV [103],[104]";
    MOV(Memory(103), Memory(104));
pc045: if (Tick()) return;
    register_pc_ = 45;
    VLOG(3) << "[45] MOV [104],[102]";
    MOV(Memory(104), Memory(102));
pc046: if (Tick()) return;
    register_pc_ = 46;
    VLOG(3) << "[46] SUB [104],b";
    SUB(Memory(104), register_b_);
pc047: if (Tick()) return;
    register_pc_ = 47;
    VLOG(3) << "[47] JGT 50,[102],b";
    if (JGT(Memory(102), register_b_)) goto pc050;
pc048: if (Tick()) return;
    register_pc_ = 48;
    VLOG(3) << "[48] MOV [104],b";
    MOV(Memory(104), register_b_);
pc049: if (Tick()) return;
    register_pc_ = 49;
    VLOG(3) << "[49] SUB [104],[102]";
    SUB(Memory(104), Memory(102));
pc050: if (Tick()) return;
    register_pc_ = 50;
    VLOG(3) << "[50] JGT 56,[104],100";
    if (JGT(Memory(104), 100)) goto pc056;
pc051: if (Tick()) return;
    register_pc_ = 51;
    VLOG(3) << "[51] ADD [103],[104]";
    ADD(Memory(103), Memory(104));
pc052: if (Tick()) return;
    register_pc_ = 52;
    VLOG(3) << "[52] INC [103]";
    INC(Memory(103));
pc053: if (Tick()) return;
    register_pc_ = 53;
    VLOG(3) << "[53] MOV [105],20";
    MOV(Memory(105), 20);
pc054: if (Tick()) return;
    register_pc_ = 54;
    VLOG(3) << "[54] DIV [105],[103]";
    DIV(Memory(105), Memory(103));
pc055: if (Tick()) return;
    register_pc_ = 55;
    VLOG(3) << "[55] SUB [99],[105]";
    SUB(Memory(99), Memory(105));
pc056: if (Tick()) return;
    register_pc_ = 56;
    VLOG(3) << "[56] JGT 35,c,0";
    if (JGT(register_c_, 0)) goto pc035;
pc057: if (Tick()) return;
    register_pc_ = 57;
    VLOG(3) << "[57] JLT 63,[99],[4]";
    if (JLT(Memory(99), Memory(4))) goto pc063;
pc058: if (Tick()) return;
    register_pc_ = 58;
    VLOG(3) << "[58] JGT 60,[99],[4]";
    if (JGT(Memory(99), Memory(4))) goto pc060;
pc059: if (Tick()) return;
    register_pc_ = 59;
    VLOG(3) << "[59] JLT 63,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc063;
pc060: if (Tick()) return;
    register_pc_ = 60;
    VLOG(3) << "[60] MOV [1],0";
    MOV(Memory(1), 0);
pc061: if (Tick()) return;
    register_pc_ = 61;
    VLOG(3) << "[61] MOV [4],[99]";
    MOV(Memory(4), Memory(99));
pc062: if (Tick()) return;
    register_pc_ = 62;
    VLOG(3) << "[62] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc063: if (Tick()) return;
    register_pc_ = 63;
    VLOG(3) << "[63] MOV [99],100";
    MOV(Memory(99), 100);
pc064: if (Tick()) return;
    register_pc_ = 64;
    VLOG(3) << "[64] MOV a,g";
    MOV(register_a_, register_g_);
pc065: if (Tick()) return;
    register_pc_ = 65;
    VLOG(3) << "[65] MOV b,h";
    MOV(register_b_, register_h_);
pc066: if (Tick()) return;
    register_pc_ = 66;
    VLOG(3) << "[66] ADD a,1";
    ADD(register_a_, 1);
pc067: if (Tick()) return;
    register_pc_ = 67;
    VLOG(3) << "[67] MOV [101],a";
    MOV(Memory(101), register_a_);
pc068: if (Tick()) return;
    register_pc_ = 68;
    VLOG(3) << "[68] MOV [102],b";
    MOV(Memory(102), register_b_);
pc069: if (Tick()) return;
    register_pc_ = 69;
    VLOG(3) << "[69] INT 7";
    INT7();
pc070: if (Tick()) return;
    register_pc_ = 70;
    VLOG(3) << "[70] JEQ 107,a,0";
    if (JEQ(register_a_, 0)) goto pc107;
pc071: if (Tick()) return;
    register_pc_ = 71;
    VLOG(3) << "[71] JEQ 107,[3],1";
    if (JEQ(Memory(3), 1)) goto pc107;
pc072: if (Tick()) return;
    register_pc_ = 72;
    VLOG(3) << "[72] MOV [100],0";
    MOV(Memory(100), 0);
pc073: if (Tick()) return;
    register_pc_ = 73;
    VLOG(3) << "[73] JLT 77,e,g";
    if (JLT(register_e_, register_g_)) goto pc077;
pc074: if (Tick()) return;
    register_pc_ = 74;
    VLOG(3) << "[74] ADD [99],100";
    ADD(Memory(99), 100);
pc075: if (Tick()) return;
    register_pc_ = 75;
    VLOG(3) << "[75] MOV [100],e";
    MOV(Memory(100), register_e_);
pc076: if (Tick()) return;
    register_pc_ = 76;
    VLOG(3) << "[76] SUB [100],g";
    SUB(Memory(100), register_g_);
pc077: if (Tick()) return;
    register_pc_ = 77;
    VLOG(3) << "[77] MOV c,[6]";
    MOV(register_c_, Memory(6));
pc078: if (Tick()) return;
    register_pc_ = 78;
    VLOG(3) << "[78] JLT 101,c,1";
    if (JLT(register_c_, 1)) goto pc101;
pc079: if (Tick()) return;
    register_pc_ = 79;
    VLOG(3) << "[79] DEC c";
    DEC(register_c_);
pc080: if (Tick()) return;
    register_pc_ = 80;
    VLOG(3) << "[80] MOV a,c";
    MOV(register_a_, register_c_);
pc081: if (Tick()) return;
    register_pc_ = 81;
    VLOG(3) << "[81] INT 4";
    INT4();
pc082: if (Tick()) return;
    register_pc_ = 82;
    VLOG(3) << "[82] MOV [104],[101]";
    MOV(Memory(104), Memory(101));
pc083: if (Tick()) return;
    register_pc_ = 83;
    VLOG(3) << "[83] SUB [104],a";
    SUB(Memory(104), register_a_);
pc084: if (Tick()) return;
    register_pc_ = 84;
    VLOG(3) << "[84] JGT 87,[101],a";
    if (JGT(Memory(101), register_a_)) goto pc087;
pc085: if (Tick()) return;
    register_pc_ = 85;
    VLOG(3) << "[85] MOV [104],a";
    MOV(Memory(104), register_a_);
pc086: if (Tick()) return;
    register_pc_ = 86;
    VLOG(3) << "[86] SUB [104],[101]";
    SUB(Memory(104), Memory(101));
pc087: if (Tick()) return;
    register_pc_ = 87;
    VLOG(3) << "[87] JGT 100,[104],100";
    if (JGT(Memory(104), 100)) goto pc100;
pc088: if (Tick()) return;
    register_pc_ = 88;
    VLOG(3) << "[88] MOV [103],[104]";
    MOV(Memory(103), Memory(104));
pc089: if (Tick()) return;
    register_pc_ = 89;
    VLOG(3) << "[89] MOV [104],[102]";
    MOV(Memory(104), Memory(102));
pc090: if (Tick()) return;
    register_pc_ = 90;
    VLOG(3) << "[90] SUB [104],b";
    SUB(Memory(104), register_b_);
pc091: if (Tick()) return;
    register_pc_ = 91;
    VLOG(3) << "[91] JGT 94,[102],b";
    if (JGT(Memory(102), register_b_)) goto pc094;
pc092: if (Tick()) return;
    register_pc_ = 92;
    VLOG(3) << "[92] MOV [104],b";
    MOV(Memory(104), register_b_);
pc093: if (Tick()) return;
    register_pc_ = 93;
    VLOG(3) << "[93] SUB [104],[102]";
    SUB(Memory(104), Memory(102));
pc094: if (Tick()) return;
    register_pc_ = 94;
    VLOG(3) << "[94] JGT 100,[104],100";
    if (JGT(Memory(104), 100)) goto pc100;
pc095: if (Tick()) return;
    register_pc_ = 95;
    VLOG(3) << "[95] ADD [103],[104]";
    ADD(Memory(103), Memory(104));
pc096: if (Tick()) return;
    register_pc_ = 96;
    VLOG(3) << "[96] INC [103]";
    INC(Memory(103));
pc097: if (Tick()) return;
    register_pc_ = 97;
    VLOG(3) << "[97] MOV [105],20";
    MOV(Memory(105), 20);
pc098: if (Tick()) return;
    register_pc_ = 98;
    VLOG(3) << "[98] DIV [105],[103]";
    DIV(Memory(105), Memory(103));
pc099: if (Tick()) return;
    register_pc_ = 99;
    VLOG(3) << "[99] SUB [99],[105]";
    SUB(Memory(99), Memory(105));
pc100: if (Tick()) return;
    register_pc_ = 100;
    VLOG(3) << "[100] JGT 79,c,0";
    if (JGT(register_c_, 0)) goto pc079;
pc101: if (Tick()) return;
    register_pc_ = 101;
    VLOG(3) << "[101] JLT 107,[99],[4]";
    if (JLT(Memory(99), Memory(4))) goto pc107;
pc102: if (Tick()) return;
    register_pc_ = 102;
    VLOG(3) << "[102] JGT 104,[99],[4]";
    if (JGT(Memory(99), Memory(4))) goto pc104;
pc103: if (Tick()) return;
    register_pc_ = 103;
    VLOG(3) << "[103] JLT 107,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc107;
pc104: if (Tick()) return;
    register_pc_ = 104;
    VLOG(3) << "[104] MOV [1],1";
    MOV(Memory(1), 1);
pc105: if (Tick()) return;
    register_pc_ = 105;
    VLOG(3) << "[105] MOV [4],[99]";
    MOV(Memory(4), Memory(99));
pc106: if (Tick()) return;
    register_pc_ = 106;
    VLOG(3) << "[106] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc107: if (Tick()) return;
    register_pc_ = 107;
    VLOG(3) << "[107] MOV [99],100";
    MOV(Memory(99), 100);
pc108: if (Tick()) return;
    register_pc_ = 108;
    VLOG(3) << "[108] MOV a,g";
    MOV(register_a_, register_g_);
pc109: if (Tick()) return;
    register_pc_ = 109;
    VLOG(3) << "[109] MOV b,h";
    MOV(register_b_, register_h_);
pc110: if (Tick()) return;
    register_pc_ = 110;
    VLOG(3) << "[110] ADD b,1";
    ADD(register_b_, 1);
pc111: if (Tick()) return;
    register_pc_ = 111;
    VLOG(3) << "[111] MOV [101],a";
    MOV(Memory(101), register_a_);
pc112: if (Tick()) return;
    register_pc_ = 112;
    VLOG(3) << "[112] MOV [102],b";
    MOV(Memory(102), register_b_);
pc113: if (Tick()) return;
    register_pc_ = 113;
    VLOG(3) << "[113] INT 7";
    INT7();
pc114: if (Tick()) return;
    register_pc_ = 114;
    VLOG(3) << "[114] JEQ 151,a,0";
    if (JEQ(register_a_, 0)) goto pc151;
pc115: if (Tick()) return;
    register_pc_ = 115;
    VLOG(3) << "[115] JEQ 151,[3],2";
    if (JEQ(Memory(3), 2)) goto pc151;
pc116: if (Tick()) return;
    register_pc_ = 116;
    VLOG(3) << "[116] MOV [100],0";
    MOV(Memory(100), 0);
pc117: if (Tick()) return;
    register_pc_ = 117;
    VLOG(3) << "[117] JLT 121,f,h";
    if (JLT(register_f_, register_h_)) goto pc121;
pc118: if (Tick()) return;
    register_pc_ = 118;
    VLOG(3) << "[118] ADD [99],100";
    ADD(Memory(99), 100);
pc119: if (Tick()) return;
    register_pc_ = 119;
    VLOG(3) << "[119] MOV [100],f";
    MOV(Memory(100), register_f_);
pc120: if (Tick()) return;
    register_pc_ = 120;
    VLOG(3) << "[120] SUB [100],h";
    SUB(Memory(100), register_h_);
pc121: if (Tick()) return;
    register_pc_ = 121;
    VLOG(3) << "[121] MOV c,[6]";
    MOV(register_c_, Memory(6));
pc122: if (Tick()) return;
    register_pc_ = 122;
    VLOG(3) << "[122] JLT 145,c,1";
    if (JLT(register_c_, 1)) goto pc145;
pc123: if (Tick()) return;
    register_pc_ = 123;
    VLOG(3) << "[123] DEC c";
    DEC(register_c_);
pc124: if (Tick()) return;
    register_pc_ = 124;
    VLOG(3) << "[124] MOV a,c";
    MOV(register_a_, register_c_);
pc125: if (Tick()) return;
    register_pc_ = 125;
    VLOG(3) << "[125] INT 4";
    INT4();
pc126: if (Tick()) return;
    register_pc_ = 126;
    VLOG(3) << "[126] MOV [104],[101]";
    MOV(Memory(104), Memory(101));
pc127: if (Tick()) return;
    register_pc_ = 127;
    VLOG(3) << "[127] SUB [104],a";
    SUB(Memory(104), register_a_);
pc128: if (Tick()) return;
    register_pc_ = 128;
    VLOG(3) << "[128] JGT 131,[101],a";
    if (JGT(Memory(101), register_a_)) goto pc131;
pc129: if (Tick()) return;
    register_pc_ = 129;
    VLOG(3) << "[129] MOV [104],a";
    MOV(Memory(104), register_a_);
pc130: if (Tick()) return;
    register_pc_ = 130;
    VLOG(3) << "[130] SUB [104],[101]";
    SUB(Memory(104), Memory(101));
pc131: if (Tick()) return;
    register_pc_ = 131;
    VLOG(3) << "[131] JGT 144,[104],100";
    if (JGT(Memory(104), 100)) goto pc144;
pc132: if (Tick()) return;
    register_pc_ = 132;
    VLOG(3) << "[132] MOV [103],[104]";
    MOV(Memory(103), Memory(104));
pc133: if (Tick()) return;
    register_pc_ = 133;
    VLOG(3) << "[133] MOV [104],[102]";
    MOV(Memory(104), Memory(102));
pc134: if (Tick()) return;
    register_pc_ = 134;
    VLOG(3) << "[134] SUB [104],b";
    SUB(Memory(104), register_b_);
pc135: if (Tick()) return;
    register_pc_ = 135;
    VLOG(3) << "[135] JGT 138,[102],b";
    if (JGT(Memory(102), register_b_)) goto pc138;
pc136: if (Tick()) return;
    register_pc_ = 136;
    VLOG(3) << "[136] MOV [104],b";
    MOV(Memory(104), register_b_);
pc137: if (Tick()) return;
    register_pc_ = 137;
    VLOG(3) << "[137] SUB [104],[102]";
    SUB(Memory(104), Memory(102));
pc138: if (Tick()) return;
    register_pc_ = 138;
    VLOG(3) << "[138] JGT 144,[104],100";
    if (JGT(Memory(104), 100)) goto pc144;
pc139: if (Tick()) return;
    register_pc_ = 139;
    VLOG(3) << "[139] ADD [103],[104]";
    ADD(Memory(103), Memory(104));
pc140: if (Tick()) return;
    register_pc_ = 140;
    VLOG(3) << "[140] INC [103]";
    INC(Memory(103));
pc141: if (Tick()) return;
    register_pc_ = 141;
    VLOG(3) << "[141] MOV [105],20";
    MOV(Memory(105), 20);
pc142: if (Tick()) return;
    register_pc_ = 142;
    VLOG(3) << "[142] DIV [105],[103]";
    DIV(Memory(105), Memory(103));
pc143: if (Tick()) return;
    register_pc_ = 143;
    VLOG(3) << "[143] SUB [99],[105]";
    SUB(Memory(99), Memory(105));
pc144: if (Tick()) return;
    register_pc_ = 144;
    VLOG(3) << "[144] JGT 123,c,0";
    if (JGT(register_c_, 0)) goto pc123;
pc145: if (Tick()) return;
    register_pc_ = 145;
    VLOG(3) << "[145] JLT 151,[99],[4]";
    if (JLT(Memory(99), Memory(4))) goto pc151;
pc146: if (Tick()) return;
    register_pc_ = 146;
    VLOG(3) << "[146] JGT 148,[99],[4]";
    if (JGT(Memory(99), Memory(4))) goto pc148;
pc147: if (Tick()) return;
    register_pc_ = 147;
    VLOG(3) << "[147] JLT 151,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc151;
pc148: if (Tick()) return;
    register_pc_ = 148;
    VLOG(3) << "[148] MOV [1],2";
    MOV(Memory(1), 2);
pc149: if (Tick()) return;
    register_pc_ = 149;
    VLOG(3) << "[149] MOV [4],[99]";
    MOV(Memory(4), Memory(99));
pc150: if (Tick()) return;
    register_pc_ = 150;
    VLOG(3) << "[150] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc151: if (Tick()) return;
    register_pc_ = 151;
    VLOG(3) << "[151] MOV [99],100";
    MOV(Memory(99), 100);
pc152: if (Tick()) return;
    register_pc_ = 152;
    VLOG(3) << "[152] MOV a,g";
    MOV(register_a_, register_g_);
pc153: if (Tick()) return;
    register_pc_ = 153;
    VLOG(3) << "[153] MOV b,h";
    MOV(register_b_, register_h_);
pc154: if (Tick()) return;
    register_pc_ = 154;
    VLOG(3) << "[154] SUB a,1";
    SUB(register_a_, 1);
pc155: if (Tick()) return;
    register_pc_ = 155;
    VLOG(3) << "[155] MOV [101],a";
    MOV(Memory(101), register_a_);
pc156: if (Tick()) return;
    register_pc_ = 156;
    VLOG(3) << "[156] MOV [102],b";
    MOV(Memory(102), register_b_);
pc157: if (Tick()) return;
    register_pc_ = 157;
    VLOG(3) << "[157] INT 7";
    INT7();
pc158: if (Tick()) return;
    register_pc_ = 158;
    VLOG(3) << "[158] JEQ 195,a,0";
    if (JEQ(register_a_, 0)) goto pc195;
pc159: if (Tick()) return;
    register_pc_ = 159;
    VLOG(3) << "[159] JEQ 195,[3],3";
    if (JEQ(Memory(3), 3)) goto pc195;
pc160: if (Tick()) return;
    register_pc_ = 160;
    VLOG(3) << "[160] MOV [100],0";
    MOV(Memory(100), 0);
pc161: if (Tick()) return;
    register_pc_ = 161;
    VLOG(3) << "[161] JGT 165,e,g";
    if (JGT(register_e_, register_g_)) goto pc165;
pc162: if (Tick()) return;
    register_pc_ = 162;
    VLOG(3) << "[162] ADD [99],100";
    ADD(Memory(99), 100);
pc163: if (Tick()) return;
    register_pc_ = 163;
    VLOG(3) << "[163] MOV [100],g";
    MOV(Memory(100), register_g_);
pc164: if (Tick()) return;
    register_pc_ = 164;
    VLOG(3) << "[164] SUB [100],e";
    SUB(Memory(100), register_e_);
pc165: if (Tick()) return;
    register_pc_ = 165;
    VLOG(3) << "[165] MOV c,[6]";
    MOV(register_c_, Memory(6));
pc166: if (Tick()) return;
    register_pc_ = 166;
    VLOG(3) << "[166] JLT 189,c,1";
    if (JLT(register_c_, 1)) goto pc189;
pc167: if (Tick()) return;
    register_pc_ = 167;
    VLOG(3) << "[167] DEC c";
    DEC(register_c_);
pc168: if (Tick()) return;
    register_pc_ = 168;
    VLOG(3) << "[168] MOV a,c";
    MOV(register_a_, register_c_);
pc169: if (Tick()) return;
    register_pc_ = 169;
    VLOG(3) << "[169] INT 4";
    INT4();
pc170: if (Tick()) return;
    register_pc_ = 170;
    VLOG(3) << "[170] MOV [104],[101]";
    MOV(Memory(104), Memory(101));
pc171: if (Tick()) return;
    register_pc_ = 171;
    VLOG(3) << "[171] SUB [104],a";
    SUB(Memory(104), register_a_);
pc172: if (Tick()) return;
    register_pc_ = 172;
    VLOG(3) << "[172] JGT 175,[101],a";
    if (JGT(Memory(101), register_a_)) goto pc175;
pc173: if (Tick()) return;
    register_pc_ = 173;
    VLOG(3) << "[173] MOV [104],a";
    MOV(Memory(104), register_a_);
pc174: if (Tick()) return;
    register_pc_ = 174;
    VLOG(3) << "[174] SUB [104],[101]";
    SUB(Memory(104), Memory(101));
pc175: if (Tick()) return;
    register_pc_ = 175;
    VLOG(3) << "[175] JGT 188,[104],100";
    if (JGT(Memory(104), 100)) goto pc188;
pc176: if (Tick()) return;
    register_pc_ = 176;
    VLOG(3) << "[176] MOV [103],[104]";
    MOV(Memory(103), Memory(104));
pc177: if (Tick()) return;
    register_pc_ = 177;
    VLOG(3) << "[177] MOV [104],[102]";
    MOV(Memory(104), Memory(102));
pc178: if (Tick()) return;
    register_pc_ = 178;
    VLOG(3) << "[178] SUB [104],b";
    SUB(Memory(104), register_b_);
pc179: if (Tick()) return;
    register_pc_ = 179;
    VLOG(3) << "[179] JGT 182,[102],b";
    if (JGT(Memory(102), register_b_)) goto pc182;
pc180: if (Tick()) return;
    register_pc_ = 180;
    VLOG(3) << "[180] MOV [104],b";
    MOV(Memory(104), register_b_);
pc181: if (Tick()) return;
    register_pc_ = 181;
    VLOG(3) << "[181] SUB [104],[102]";
    SUB(Memory(104), Memory(102));
pc182: if (Tick()) return;
    register_pc_ = 182;
    VLOG(3) << "[182] JGT 188,[104],100";
    if (JGT(Memory(104), 100)) goto pc188;
pc183: if (Tick()) return;
    register_pc_ = 183;
    VLOG(3) << "[183] ADD [103],[104]";
    ADD(Memory(103), Memory(104));
pc184: if (Tick()) return;
    register_pc_ = 184;
    VLOG(3) << "[184] INC [103]";
    INC(Memory(103));
pc185: if (Tick()) return;
    register_pc_ = 185;
    VLOG(3) << "[185] MOV [105],20";
    MOV(Memory(105), 20);
pc186: if (Tick()) return;
    register_pc_ = 186;
    VLOG(3) << "[186] DIV [105],[103]";
    DIV(Memory(105), Memory(103));
pc187: if (Tick()) return;
    register_pc_ = 187;
    VLOG(3) << "[187] SUB [99],[105]";
    SUB(Memory(99), Memory(105));
pc188: if (Tick()) return;
    register_pc_ = 188;
    VLOG(3) << "[188] JGT 167,c,0";
    if (JGT(register_c_, 0)) goto pc167;
pc189: if (Tick()) return;
    register_pc_ = 189;
    VLOG(3) << "[189] JLT 195,[99],[4]";
    if (JLT(Memory(99), Memory(4))) goto pc195;
pc190: if (Tick()) return;
    register_pc_ = 190;
    VLOG(3) << "[190] JGT 192,[99],[4]";
    if (JGT(Memory(99), Memory(4))) goto pc192;
pc191: if (Tick()) return;
    register_pc_ = 191;
    VLOG(3) << "[191] JLT 195,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc195;
pc192: if (Tick()) return;
    register_pc_ = 192;
    VLOG(3) << "[192] MOV [1],3";
    MOV(Memory(1), 3);
pc193: if (Tick()) return;
    register_pc_ = 193;
    VLOG(3) << "[193] MOV [4],[99]";
    MOV(Memory(4), Memory(99));
pc194: if (Tick()) return;
    register_pc_ = 194;
    VLOG(3) << "[194] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc195: if (Tick()) return;
    register_pc_ = 195;
    VLOG(3) << "[195] MOV a,[1]";
    MOV(register_a_, Memory(1));
pc196: if (Tick()) return;
    register_pc_ = 196;
    VLOG(3) << "[196] INT 0";
    INT0();
pc197: if (Tick()) return;
    register_pc_ = 197;
    VLOG(3) << "[197] MOV d,[1]";
    MOV(register_d_, Memory(1));
pc198: if (Tick()) return;
    register_pc_ = 198;
    VLOG(3) << "[198] HLT";
    HLT();
  }
};

class iwi2GhostFactory : public ::GhostFactory {
 public:
  virtual ~iwi2GhostFactory() {}

  std::unique_ptr<::GhostInterface> Create() {
    return std::unique_ptr<::GhostInterface>(new iwi2Ghost());
  }
};

}  // namespace ghost

#endif  // GHOST_AI_IWI2_H_
