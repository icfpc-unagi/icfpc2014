
  INT 1
  ; 現在位置の取得
  MOV e,a
  MOV f,b
  INT 3
  MOV [0],a
  INT 5
  MOV g,a
  MOV h,b
  INT 3
  INT 6
  MOV [3],b
  ADD [3],2
  JLT init3,[3],4
  SUB [3],4

init3:
  ; [1] --- Best Direction
  ; [4] --- Best Score (larger, better)
  ; [5] --- Best Distance (larger, better)
  MOV [1],[3] ; 最高値の初期化
  MOV [4],0
  MOV [5],0

  ; [6] --- Distance to enemy
  ; x
  MOV [6],e
  SUB [6],g
  JGT init5,e,g
  MOV [6],g
  SUB [6],e
init5:
  ; y
  MOV [100],f
  SUB [100],h
  JGT init6,f,h
  MOV [100],h
  SUB [100],f
init6:
  ADD [6],[100]


  ; dir に行くときの処理
  MOV d,100 ;

  ; 壁だったら dir 評価を0にする
  MOV a,g
  MOV b,h
  SUB b,1
  INT 7
  JEQ uplast,a,0
  JEQ uplast,[3],0

  ; dir にいるなら評価22アップ
  MOV [100],0
  JGT up1,f,h
  MOV [100],h
  SUB [100],f

  ; if (distance > 10) then +20
  JGT up00,[6],10
  ; else if (freight mode) then -20
  SUB d,20
  INT 3
  INT 6
  JEQ up0,a,1
up00:
  ; else +20
  ADD d,40
up0:

up1:
  ; 上が最高値になっていたら更新
  JLT uplast,d,[4]
  JGT upaccept,d,[4]
  JLT uplast,[100],[5]
upaccept:
  MOV [1],0
  MOV [4],d
  MOV [5],[100]
uplast:

  ; dir に行くときの処理
  MOV d,100 ;

  ; 壁だったら dir 評価を0にする
  MOV a,g
  MOV b,h
  ADD a,1
  INT 7
  JEQ rightlast,a,0
  JEQ rightlast,[3],1

  ; dir にいるなら評価22アップ
  MOV [100],0
  JLT right1,e,g
  MOV [100],e
  SUB [100],g

  ; if (distance > 10) then +20
  JGT right00,[6],10
  ; else if (freight mode) then -20
  SUB d,20
  INT 3
  INT 6
  JEQ right0,a,1
right00:
  ; else +20
  ADD d,40
right0:

right1:
  ; 上が最高値になっていたら更新
  JLT rightlast,d,[4]
  JGT rightaccept,d,[4]
  JLT rightlast,[100],[5]
rightaccept:
  MOV [1],1
  MOV [4],d
  MOV [5],[100]
rightlast:

  ; dir に行くときの処理
  MOV d,100 ;

  ; 壁だったら dir 評価を0にする
  MOV a,g
  MOV b,h
  ADD b,1
  INT 7
  JEQ downlast,a,0
  JEQ downlast,[3],2

  ; dir にいるなら評価22アップ
  MOV [100],0
  JLT down1,f,h
  MOV [100],f
  SUB [100],h

  ; if (distance > 10) then +20
  JGT down00,[6],10
  ; else if (freight mode) then -20
  SUB d,20
  INT 3
  INT 6
  JEQ down0,a,1
down00:
  ; else +20
  ADD d,40
down0:

down1:
  ; 上が最高値になっていたら更新
  JLT downlast,d,[4]
  JGT downaccept,d,[4]
  JLT downlast,[100],[5]
downaccept:
  MOV [1],2
  MOV [4],d
  MOV [5],[100]
downlast:

  ; dir に行くときの処理
  MOV d,100 ;

  ; 壁だったら dir 評価を0にする
  MOV a,g
  MOV b,h
  SUB a,1
  INT 7
  JEQ leftlast,a,0
  JEQ leftlast,[3],3

  ; dir にいるなら評価22アップ
  MOV [100],0
  JGT left1,e,g
  MOV [100],g
  SUB [100],e

  ; if (distance > 10) then +20
  JGT left00,[6],10
  ; else if (freight mode) then -20
  SUB d,20
  INT 3
  INT 6
  JEQ left0,a,1
left00:
  ; else +20
  ADD d,40
left0:

left1:
  ; 上が最高値になっていたら更新
  JLT leftlast,d,[4]
  JGT leftaccept,d,[4]
  JLT leftlast,[100],[5]
leftaccept:
  MOV [1],3
  MOV [4],d
  MOV [5],[100]
leftlast:


  ; 最後に最高記録を採用
  MOV a,[1]
  INT 0
  MOV d,[1]
  HLT
