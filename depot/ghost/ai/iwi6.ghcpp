# -*- coding: utf-8 -*-
  INT 1
  ; 現在位置の取得
  MOV <enemy_x>,a
  MOV <enemy_y>,b
  INT 3
  MOV [0],a
  INT 5
  MOV <my_x>,a
  MOV <my_y>,b
  INT 3
  INT 6
  MOV [3],b
  ADD [3],2
  JLT init3,[3],4
  SUB [3],4

init3:
  ; [1] --- Best Direction
  ; [4] --- Best Score (larger, better)
  ; [5] --- Best Distance (larger, better)
  MOV [1],[3] ; 最高値の初期化
  MOV [4],0
  MOV [5],0

  ; [6] --- Distance to enemy
  ; x
  MOV [6],<enemy_x>
  SUB [6],<my_x>
  JGT init5,<enemy_x>,<my_x>
  MOV [6],<my_x>
  SUB [6],<enemy_x>
init5:
  ; y
  MOV [100],<enemy_y>
  SUB [100],<my_y>
  JGT init6,<enemy_y>,<my_y>
  MOV [100],<my_y>
  SUB [100],<enemy_y>
init6:
  ADD [6],[100]

DIRECTIONS {
  ; dir に行くときの処理
  MOV d,100 ;

  ; 壁だったら dir 評価を0にする
  MOV a,<my_x>
  MOV b,<my_y>
  <%= d(['SUB b,1', 'ADD a,1', 'ADD b,1', 'SUB a,1']) %>
  INT 7
  JEQ <dir_name>last,a,0
  JEQ <dir_name>last,[3],<dir_num>

  ; [100] --- 2nd score; random hash + distance
  INT 3
  MOV [100],a
  XOR [100],<dir_num>
  AND [100],3

  ; dir にいるなら評価22アップ
  <%= d(['JGT <dir_name>1,<enemy_y>,<my_y>',
         'JLT <dir_name>1,<enemy_x>,<my_x>',
         'JLT <dir_name>1,<enemy_y>,<my_y>',
         'JGT <dir_name>1,<enemy_x>,<my_x>']) %>

  ; if (distance > 10) then +20
  JGT <dir_name>00,[6],10
  ; else if (freight mode) then -20
  SUB d,20
  INT 3
  INT 6
  JEQ <dir_name>0,a,1
<dir_name>00:
  ; else +20
  ADD d,40
  ADD [100],<%= d(['<my_y>',    '<enemy_x>', '<enemy_y>', '<my_x>'])    %>
  SUB [100],<%= d(['<enemy_y>', '<my_x>',    '<my_y>',    '<enemy_x>']) %>
<dir_name>0:

<dir_name>1:
  ; 上が最高値になっていたら更新
  JLT <dir_name>last,d,[4]
  JGT <dir_name>accept,d,[4]
  JLT <dir_name>last,[100],[5]
<dir_name>accept:
  MOV [1],<dir_num>
  MOV [4],d
  MOV [5],[100]
<dir_name>last:
}

  ; 最後に最高記録を採用
  MOV a,[1]
  INT 0
  MOV d,[1]
  HLT
