#!/bin/bash

set -e -u

AI_DIR="$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)"
DEPOT_DIR="${AI_DIR%/depot/*}/depot"

cd "${AI_DIR}"

if [ -f BUILD.cmake ]; then rm BUILD.cmake; fi
for ghc_file in *.ghc; do
  name="${ghc_file%.ghc}"

  "${DEPOT_DIR}/bin/ghc-compile" "${name}" "${ghc_file}" > "${name}.h"

  cat << EOM >"${name}.cc"
#include "ghost/sample/${name}.h"

namespace dummy {
void ghost_ai_${name}_cc() {}
}  // namespace dummy
EOM

  cat << EOM >>BUILD.cmake
cc_library(
    NAME "${name}"
    SOURCES "${name}.cc"
    DEPENDENCIES
        "//base"
        "//ghost"
)

EOM

done

cat << EOM >> BUILD.cmake
cc_library(
    NAME "ai"
    SOURCES "ai.cc"
    DEPENDENCIES
EOM

for ghc_file in *.ghc; do
  name="${ghc_file%.ghc}"
  echo '        ":'$name'"' >> BUILD.cmake
done

cat << EOM >> BUILD.cmake
        "//ghost:ghost-ai-manager"
)
EOM


cat << EOM > ai.cc
#include "ghost/ai/ai.h"
EOM

for ghc_file in *.ghc; do
  name="${ghc_file%.ghc}"
  echo '#include "ghost/ai/'${name}'.h"' >> ai.cc
done

cat << EOM >> ai.cc
#include "ghost/ghost-ai-manager.h"

namespace ghost {

void RegisterAi() {
EOM

for ghc_file in *.ghc; do
  name="${ghc_file%.ghc}"
  echo '  GetGhostAiManager()->RegisterGhostFactory(' >> ai.cc
  echo '      "'${name}'", new '$name'GhostFactory);' >> ai.cc
done

cat << EOM >> ai.cc
}

}  // namespace ghost
EOM
