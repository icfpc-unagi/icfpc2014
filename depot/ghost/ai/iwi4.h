#ifndef GHOST_AI_IWI4_H_
#define GHOST_AI_IWI4_H_

#include "ghost/ghost.h"

#include <glog/logging.h>

namespace ghost {

class iwi4Ghost : public Ghost {
  void Run() override {
    ResetTick();
pc000: if (Tick()) return;
    register_pc_ = 0;
    VLOG(3) << "[0] INT 1";
    INT1();
pc001: if (Tick()) return;
    register_pc_ = 1;
    VLOG(3) << "[1] MOV e,a";
    MOV(register_e_, register_a_);
pc002: if (Tick()) return;
    register_pc_ = 2;
    VLOG(3) << "[2] MOV f,b";
    MOV(register_f_, register_b_);
pc003: if (Tick()) return;
    register_pc_ = 3;
    VLOG(3) << "[3] INT 3";
    INT3();
pc004: if (Tick()) return;
    register_pc_ = 4;
    VLOG(3) << "[4] MOV [0],a";
    MOV(Memory(0), register_a_);
pc005: if (Tick()) return;
    register_pc_ = 5;
    VLOG(3) << "[5] INT 5";
    INT5();
pc006: if (Tick()) return;
    register_pc_ = 6;
    VLOG(3) << "[6] MOV g,a";
    MOV(register_g_, register_a_);
pc007: if (Tick()) return;
    register_pc_ = 7;
    VLOG(3) << "[7] MOV h,b";
    MOV(register_h_, register_b_);
pc008: if (Tick()) return;
    register_pc_ = 8;
    VLOG(3) << "[8] INT 3";
    INT3();
pc009: if (Tick()) return;
    register_pc_ = 9;
    VLOG(3) << "[9] INT 6";
    INT6();
pc010: if (Tick()) return;
    register_pc_ = 10;
    VLOG(3) << "[10] MOV [3],b";
    MOV(Memory(3), register_b_);
pc011: if (Tick()) return;
    register_pc_ = 11;
    VLOG(3) << "[11] ADD [3],2";
    ADD(Memory(3), 2);
pc012: if (Tick()) return;
    register_pc_ = 12;
    VLOG(3) << "[12] JLT 14,[3],4";
    if (JLT(Memory(3), 4)) goto pc014;
pc013: if (Tick()) return;
    register_pc_ = 13;
    VLOG(3) << "[13] SUB [3],4";
    SUB(Memory(3), 4);
pc014: if (Tick()) return;
    register_pc_ = 14;
    VLOG(3) << "[14] MOV [1],[3]";
    MOV(Memory(1), Memory(3));
pc015: if (Tick()) return;
    register_pc_ = 15;
    VLOG(3) << "[15] MOV [4],0";
    MOV(Memory(4), 0);
pc016: if (Tick()) return;
    register_pc_ = 16;
    VLOG(3) << "[16] MOV [5],0";
    MOV(Memory(5), 0);
pc017: if (Tick()) return;
    register_pc_ = 17;
    VLOG(3) << "[17] MOV d,100";
    MOV(register_d_, 100);
pc018: if (Tick()) return;
    register_pc_ = 18;
    VLOG(3) << "[18] MOV a,g";
    MOV(register_a_, register_g_);
pc019: if (Tick()) return;
    register_pc_ = 19;
    VLOG(3) << "[19] MOV b,h";
    MOV(register_b_, register_h_);
pc020: if (Tick()) return;
    register_pc_ = 20;
    VLOG(3) << "[20] SUB b,1";
    SUB(register_b_, 1);
pc021: if (Tick()) return;
    register_pc_ = 21;
    VLOG(3) << "[21] INT 7";
    INT7();
pc022: if (Tick()) return;
    register_pc_ = 22;
    VLOG(3) << "[22] JEQ 40,a,0";
    if (JEQ(register_a_, 0)) goto pc040;
pc023: if (Tick()) return;
    register_pc_ = 23;
    VLOG(3) << "[23] JEQ 40,[3],0";
    if (JEQ(Memory(3), 0)) goto pc040;
pc024: if (Tick()) return;
    register_pc_ = 24;
    VLOG(3) << "[24] MOV [100],0";
    MOV(Memory(100), 0);
pc025: if (Tick()) return;
    register_pc_ = 25;
    VLOG(3) << "[25] JGT 34,f,h";
    if (JGT(register_f_, register_h_)) goto pc034;
pc026: if (Tick()) return;
    register_pc_ = 26;
    VLOG(3) << "[26] MOV [100],h";
    MOV(Memory(100), register_h_);
pc027: if (Tick()) return;
    register_pc_ = 27;
    VLOG(3) << "[27] SUB [100],f";
    SUB(Memory(100), register_f_);
pc028: if (Tick()) return;
    register_pc_ = 28;
    VLOG(3) << "[28] JGT 33,[100],10";
    if (JGT(Memory(100), 10)) goto pc033;
pc029: if (Tick()) return;
    register_pc_ = 29;
    VLOG(3) << "[29] SUB d,20";
    SUB(register_d_, 20);
pc030: if (Tick()) return;
    register_pc_ = 30;
    VLOG(3) << "[30] INT 3";
    INT3();
pc031: if (Tick()) return;
    register_pc_ = 31;
    VLOG(3) << "[31] INT 6";
    INT6();
pc032: if (Tick()) return;
    register_pc_ = 32;
    VLOG(3) << "[32] JEQ 34,a,1";
    if (JEQ(register_a_, 1)) goto pc034;
pc033: if (Tick()) return;
    register_pc_ = 33;
    VLOG(3) << "[33] ADD d,40";
    ADD(register_d_, 40);
pc034: if (Tick()) return;
    register_pc_ = 34;
    VLOG(3) << "[34] JLT 40,d,[4]";
    if (JLT(register_d_, Memory(4))) goto pc040;
pc035: if (Tick()) return;
    register_pc_ = 35;
    VLOG(3) << "[35] JGT 37,d,[4]";
    if (JGT(register_d_, Memory(4))) goto pc037;
pc036: if (Tick()) return;
    register_pc_ = 36;
    VLOG(3) << "[36] JLT 40,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc040;
pc037: if (Tick()) return;
    register_pc_ = 37;
    VLOG(3) << "[37] MOV [1],0";
    MOV(Memory(1), 0);
pc038: if (Tick()) return;
    register_pc_ = 38;
    VLOG(3) << "[38] MOV [4],d";
    MOV(Memory(4), register_d_);
pc039: if (Tick()) return;
    register_pc_ = 39;
    VLOG(3) << "[39] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc040: if (Tick()) return;
    register_pc_ = 40;
    VLOG(3) << "[40] MOV d,100";
    MOV(register_d_, 100);
pc041: if (Tick()) return;
    register_pc_ = 41;
    VLOG(3) << "[41] MOV a,g";
    MOV(register_a_, register_g_);
pc042: if (Tick()) return;
    register_pc_ = 42;
    VLOG(3) << "[42] MOV b,h";
    MOV(register_b_, register_h_);
pc043: if (Tick()) return;
    register_pc_ = 43;
    VLOG(3) << "[43] ADD a,1";
    ADD(register_a_, 1);
pc044: if (Tick()) return;
    register_pc_ = 44;
    VLOG(3) << "[44] INT 7";
    INT7();
pc045: if (Tick()) return;
    register_pc_ = 45;
    VLOG(3) << "[45] JEQ 63,a,0";
    if (JEQ(register_a_, 0)) goto pc063;
pc046: if (Tick()) return;
    register_pc_ = 46;
    VLOG(3) << "[46] JEQ 63,[3],1";
    if (JEQ(Memory(3), 1)) goto pc063;
pc047: if (Tick()) return;
    register_pc_ = 47;
    VLOG(3) << "[47] MOV [100],0";
    MOV(Memory(100), 0);
pc048: if (Tick()) return;
    register_pc_ = 48;
    VLOG(3) << "[48] JLT 57,e,g";
    if (JLT(register_e_, register_g_)) goto pc057;
pc049: if (Tick()) return;
    register_pc_ = 49;
    VLOG(3) << "[49] MOV [100],e";
    MOV(Memory(100), register_e_);
pc050: if (Tick()) return;
    register_pc_ = 50;
    VLOG(3) << "[50] SUB [100],g";
    SUB(Memory(100), register_g_);
pc051: if (Tick()) return;
    register_pc_ = 51;
    VLOG(3) << "[51] JGT 56,[100],10";
    if (JGT(Memory(100), 10)) goto pc056;
pc052: if (Tick()) return;
    register_pc_ = 52;
    VLOG(3) << "[52] SUB d,20";
    SUB(register_d_, 20);
pc053: if (Tick()) return;
    register_pc_ = 53;
    VLOG(3) << "[53] INT 3";
    INT3();
pc054: if (Tick()) return;
    register_pc_ = 54;
    VLOG(3) << "[54] INT 6";
    INT6();
pc055: if (Tick()) return;
    register_pc_ = 55;
    VLOG(3) << "[55] JEQ 57,a,1";
    if (JEQ(register_a_, 1)) goto pc057;
pc056: if (Tick()) return;
    register_pc_ = 56;
    VLOG(3) << "[56] ADD d,40";
    ADD(register_d_, 40);
pc057: if (Tick()) return;
    register_pc_ = 57;
    VLOG(3) << "[57] JLT 63,d,[4]";
    if (JLT(register_d_, Memory(4))) goto pc063;
pc058: if (Tick()) return;
    register_pc_ = 58;
    VLOG(3) << "[58] JGT 60,d,[4]";
    if (JGT(register_d_, Memory(4))) goto pc060;
pc059: if (Tick()) return;
    register_pc_ = 59;
    VLOG(3) << "[59] JLT 63,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc063;
pc060: if (Tick()) return;
    register_pc_ = 60;
    VLOG(3) << "[60] MOV [1],1";
    MOV(Memory(1), 1);
pc061: if (Tick()) return;
    register_pc_ = 61;
    VLOG(3) << "[61] MOV [4],d";
    MOV(Memory(4), register_d_);
pc062: if (Tick()) return;
    register_pc_ = 62;
    VLOG(3) << "[62] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc063: if (Tick()) return;
    register_pc_ = 63;
    VLOG(3) << "[63] MOV d,100";
    MOV(register_d_, 100);
pc064: if (Tick()) return;
    register_pc_ = 64;
    VLOG(3) << "[64] MOV a,g";
    MOV(register_a_, register_g_);
pc065: if (Tick()) return;
    register_pc_ = 65;
    VLOG(3) << "[65] MOV b,h";
    MOV(register_b_, register_h_);
pc066: if (Tick()) return;
    register_pc_ = 66;
    VLOG(3) << "[66] ADD b,1";
    ADD(register_b_, 1);
pc067: if (Tick()) return;
    register_pc_ = 67;
    VLOG(3) << "[67] INT 7";
    INT7();
pc068: if (Tick()) return;
    register_pc_ = 68;
    VLOG(3) << "[68] JEQ 86,a,0";
    if (JEQ(register_a_, 0)) goto pc086;
pc069: if (Tick()) return;
    register_pc_ = 69;
    VLOG(3) << "[69] JEQ 86,[3],2";
    if (JEQ(Memory(3), 2)) goto pc086;
pc070: if (Tick()) return;
    register_pc_ = 70;
    VLOG(3) << "[70] MOV [100],0";
    MOV(Memory(100), 0);
pc071: if (Tick()) return;
    register_pc_ = 71;
    VLOG(3) << "[71] JLT 80,f,h";
    if (JLT(register_f_, register_h_)) goto pc080;
pc072: if (Tick()) return;
    register_pc_ = 72;
    VLOG(3) << "[72] MOV [100],f";
    MOV(Memory(100), register_f_);
pc073: if (Tick()) return;
    register_pc_ = 73;
    VLOG(3) << "[73] SUB [100],h";
    SUB(Memory(100), register_h_);
pc074: if (Tick()) return;
    register_pc_ = 74;
    VLOG(3) << "[74] JGT 79,[100],10";
    if (JGT(Memory(100), 10)) goto pc079;
pc075: if (Tick()) return;
    register_pc_ = 75;
    VLOG(3) << "[75] SUB d,20";
    SUB(register_d_, 20);
pc076: if (Tick()) return;
    register_pc_ = 76;
    VLOG(3) << "[76] INT 3";
    INT3();
pc077: if (Tick()) return;
    register_pc_ = 77;
    VLOG(3) << "[77] INT 6";
    INT6();
pc078: if (Tick()) return;
    register_pc_ = 78;
    VLOG(3) << "[78] JEQ 80,a,1";
    if (JEQ(register_a_, 1)) goto pc080;
pc079: if (Tick()) return;
    register_pc_ = 79;
    VLOG(3) << "[79] ADD d,40";
    ADD(register_d_, 40);
pc080: if (Tick()) return;
    register_pc_ = 80;
    VLOG(3) << "[80] JLT 86,d,[4]";
    if (JLT(register_d_, Memory(4))) goto pc086;
pc081: if (Tick()) return;
    register_pc_ = 81;
    VLOG(3) << "[81] JGT 83,d,[4]";
    if (JGT(register_d_, Memory(4))) goto pc083;
pc082: if (Tick()) return;
    register_pc_ = 82;
    VLOG(3) << "[82] JLT 86,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc086;
pc083: if (Tick()) return;
    register_pc_ = 83;
    VLOG(3) << "[83] MOV [1],2";
    MOV(Memory(1), 2);
pc084: if (Tick()) return;
    register_pc_ = 84;
    VLOG(3) << "[84] MOV [4],d";
    MOV(Memory(4), register_d_);
pc085: if (Tick()) return;
    register_pc_ = 85;
    VLOG(3) << "[85] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc086: if (Tick()) return;
    register_pc_ = 86;
    VLOG(3) << "[86] MOV d,100";
    MOV(register_d_, 100);
pc087: if (Tick()) return;
    register_pc_ = 87;
    VLOG(3) << "[87] MOV a,g";
    MOV(register_a_, register_g_);
pc088: if (Tick()) return;
    register_pc_ = 88;
    VLOG(3) << "[88] MOV b,h";
    MOV(register_b_, register_h_);
pc089: if (Tick()) return;
    register_pc_ = 89;
    VLOG(3) << "[89] SUB a,1";
    SUB(register_a_, 1);
pc090: if (Tick()) return;
    register_pc_ = 90;
    VLOG(3) << "[90] INT 7";
    INT7();
pc091: if (Tick()) return;
    register_pc_ = 91;
    VLOG(3) << "[91] JEQ 109,a,0";
    if (JEQ(register_a_, 0)) goto pc109;
pc092: if (Tick()) return;
    register_pc_ = 92;
    VLOG(3) << "[92] JEQ 109,[3],3";
    if (JEQ(Memory(3), 3)) goto pc109;
pc093: if (Tick()) return;
    register_pc_ = 93;
    VLOG(3) << "[93] MOV [100],0";
    MOV(Memory(100), 0);
pc094: if (Tick()) return;
    register_pc_ = 94;
    VLOG(3) << "[94] JGT 103,e,g";
    if (JGT(register_e_, register_g_)) goto pc103;
pc095: if (Tick()) return;
    register_pc_ = 95;
    VLOG(3) << "[95] MOV [100],g";
    MOV(Memory(100), register_g_);
pc096: if (Tick()) return;
    register_pc_ = 96;
    VLOG(3) << "[96] SUB [100],e";
    SUB(Memory(100), register_e_);
pc097: if (Tick()) return;
    register_pc_ = 97;
    VLOG(3) << "[97] JGT 102,[100],10";
    if (JGT(Memory(100), 10)) goto pc102;
pc098: if (Tick()) return;
    register_pc_ = 98;
    VLOG(3) << "[98] SUB d,20";
    SUB(register_d_, 20);
pc099: if (Tick()) return;
    register_pc_ = 99;
    VLOG(3) << "[99] INT 3";
    INT3();
pc100: if (Tick()) return;
    register_pc_ = 100;
    VLOG(3) << "[100] INT 6";
    INT6();
pc101: if (Tick()) return;
    register_pc_ = 101;
    VLOG(3) << "[101] JEQ 103,a,1";
    if (JEQ(register_a_, 1)) goto pc103;
pc102: if (Tick()) return;
    register_pc_ = 102;
    VLOG(3) << "[102] ADD d,40";
    ADD(register_d_, 40);
pc103: if (Tick()) return;
    register_pc_ = 103;
    VLOG(3) << "[103] JLT 109,d,[4]";
    if (JLT(register_d_, Memory(4))) goto pc109;
pc104: if (Tick()) return;
    register_pc_ = 104;
    VLOG(3) << "[104] JGT 106,d,[4]";
    if (JGT(register_d_, Memory(4))) goto pc106;
pc105: if (Tick()) return;
    register_pc_ = 105;
    VLOG(3) << "[105] JLT 109,[100],[5]";
    if (JLT(Memory(100), Memory(5))) goto pc109;
pc106: if (Tick()) return;
    register_pc_ = 106;
    VLOG(3) << "[106] MOV [1],3";
    MOV(Memory(1), 3);
pc107: if (Tick()) return;
    register_pc_ = 107;
    VLOG(3) << "[107] MOV [4],d";
    MOV(Memory(4), register_d_);
pc108: if (Tick()) return;
    register_pc_ = 108;
    VLOG(3) << "[108] MOV [5],[100]";
    MOV(Memory(5), Memory(100));
pc109: if (Tick()) return;
    register_pc_ = 109;
    VLOG(3) << "[109] MOV a,[1]";
    MOV(register_a_, Memory(1));
pc110: if (Tick()) return;
    register_pc_ = 110;
    VLOG(3) << "[110] INT 0";
    INT0();
pc111: if (Tick()) return;
    register_pc_ = 111;
    VLOG(3) << "[111] MOV d,[1]";
    MOV(register_d_, Memory(1));
pc112: if (Tick()) return;
    register_pc_ = 112;
    VLOG(3) << "[112] HLT";
    HLT();
  }
};

class iwi4GhostFactory : public ::GhostFactory {
 public:
  virtual ~iwi4GhostFactory() {}

  std::unique_ptr<::GhostInterface> Create() {
    return std::unique_ptr<::GhostInterface>(new iwi4Ghost());
  }
};

}  // namespace ghost

#endif  // GHOST_AI_IWI4_H_
